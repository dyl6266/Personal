<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- logger : 출력할 메시지를 appender에 전달 -->
	<!-- appender : 전달된 로그를 어디에 출력할지 결정 (콘솔, 파일 기록, DB 저장 등) -->
	<!-- layout : 로그를 어떤 형식으로 출력할지 결정 -->

	<!-- Appenders -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%d %5p [%c] %m%n" />
		</layout>
	</appender>

	<appender name="console-infolog" class="org.apache.log4j.ConsoleAppender">
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%d %5p %m%n" />
		</layout>
	</appender>

		<!-- fatal : 아주 심각한 에러가 발생한 상태를 나타냄 -->
		<!-- error : 요청을 처리하는 중 문제가 발생한 상태를 나타냄 -->
		<!-- warn : 프로그램 실행에는 문제가 없지만, 향후 시스템 에러의 원인이 될 수 있는 경고성 메시지를 나타냄 -->
		<!-- info : 어떠한 상태 변경과 같은 정보성 메시지를 나타냄 -->
		<!-- debug : 개발 시 디버그 용도로 사용하는 메시지를 나타냄 -->
		<!-- trace : 디버그 레벨이 너무 광범위한 것을 해결하기 위해 좀 더 상세한 이벤트를 나타냄 -->

		<!-- Application Loggers -->
		<logger name="com.dy.controller" additivity="false">
			<level value="debug" />
			<appender-ref ref="console" />
		</logger>

		<!-- 3rdparty Loggers -->
		<logger name="org.springframework.core">
			<level value="info" />
		</logger>

		<logger name="org.springframework.beans">
			<level value="info" />
		</logger>

		<logger name="org.springframework.context">
			<level value="info" />
		</logger>

		<logger name="org.springframework.web">
			<level value="info" />
		</logger>

		<!-- SQL문을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 출력 -->
		<logger name="jdbc.sqlonly" additivity="false">
			<level value="info" />
			<appender-ref ref="console-infolog" />
		</logger>

		<!-- SQL문과 해당 SQL을 실행하는데 수행된 시간 정보(milliseconds) 출력 -->
		<logger name="jdbc.sqltiming" additivity="false">
			<level value="off" />
			<appender-ref ref="console" />
		</logger>

		<!-- ResultSet을 제외한 모든 JDBC 호출 정보 출력 (JDC 문제를 추적해야 하는 경우를 제외하고는 사용을 권장하지 않음) -->
		<logger name="jdbc.audit" additivity="false">
			<level value="off" />
			<appender-ref ref="console" />
		</logger>

		<!-- ResultSet을 포함한 모든 JDBC 호출 정보 출력 -->
		<logger name="jdbc.resultset" additivity="false">
			<level value="off" />
			<appender-ref ref="console" />
		</logger>

		<!-- SQL 결과 데이터를 테이블 형식으로 출력 -->
		<logger name="jdbc.resultsettable" additivity="false">
			<level value="info" />
			<appender-ref ref="console" />
		</logger>

		<!-- 열려있는 모든 번호와 연결 수립 및 해제 이벤트 출력 (연결 문제를 찾아내는데 매우 유용 (Connection Pool 설정)) -->
		<logger name="jdbc.connection" additivity="false">
			<level value="ERROR" />
			<appender-ref ref="console" />
		</logger>

		<!-- Root Logger -->
		<root>
			<priority value="info" />
			<appender-ref ref="console" />
		</root>

</log4j:configuration>
